{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TableColumnTitlePipe {\n  transform(value) {\n    if (!value) return '';\n    const splitByCapitals = value.replace(/(?<!^)([A-Z])/g, ' $1');\n    const capitalized = splitByCapitals.charAt(0).toUpperCase() + splitByCapitals.slice(1);\n    return capitalized;\n  }\n}\nTableColumnTitlePipe.ɵfac = function TableColumnTitlePipe_Factory(t) {\n  return new (t || TableColumnTitlePipe)();\n};\nTableColumnTitlePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"tableColumnTitle\",\n  type: TableColumnTitlePipe,\n  pure: true,\n  standalone: true\n});","map":{"version":3,"names":["TableColumnTitlePipe","transform","value","splitByCapitals","replace","capitalized","charAt","toUpperCase","slice","pure","standalone"],"sources":["C:\\Users\\gregor.woiwode\\workbench\\talks\\talk-qwik-angular\\apps\\insurance-angular\\src\\app\\components\\table\\table-column-titlte.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  standalone: true,\n  name: 'tableColumnTitle'\n})\nexport class TableColumnTitlePipe implements PipeTransform {\n  transform(value?: string): string {\n    if (!value) return '';\n\n    const splitByCapitals = value.replace(/(?<!^)([A-Z])/g, ' $1');\n\n    const capitalized = splitByCapitals.charAt(0).toUpperCase() + splitByCapitals.slice(1);\n\n    return capitalized;\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,oBAAoB;EAC/BC,SAASA,CAACC,KAAc;IACtB,IAAI,CAACA,KAAK,EAAE,OAAO,EAAE;IAErB,MAAMC,eAAe,GAAGD,KAAK,CAACE,OAAO,CAAC,gBAAgB,EAAE,KAAK,CAAC;IAE9D,MAAMC,WAAW,GAAGF,eAAe,CAACG,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGJ,eAAe,CAACK,KAAK,CAAC,CAAC,CAAC;IAEtF,OAAOH,WAAW;EACpB;;AATWL,oBAAoB,C;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB,C;;QAApBA,oBAAoB;EAAAS,IAAA;EAAAC,UAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}