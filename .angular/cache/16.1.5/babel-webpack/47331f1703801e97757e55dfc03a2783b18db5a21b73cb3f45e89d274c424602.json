{"ast":null,"code":"var _a, _b;\nimport { __decorate, __metadata } from \"tslib\";\nimport { AsyncPipe, JsonPipe, NgForOf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild, computed, effect, signal, untracked } from '@angular/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatTable, MatTableModule } from '@angular/material/table';\nimport { TableDatasource } from './table.datasource';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { TableColumnTitlePipe } from './table-column-titlte.pipe';\nexport let TableComponent = class TableComponent {\n  set data(data) {\n    this.models.set(data || []);\n  }\n  set columns(columns) {\n    this.tableColumns.set(columns || []);\n  }\n  constructor() {\n    this.models = signal([]);\n    this.selection = new SelectionModel(false);\n    this.selectionChange = toSignal(this.selection.changed);\n    this.selectedModel = computed(() => {\n      const selection = this.selectionChange()?.added[0];\n      return selection ? selection : null;\n    });\n    this.selected = new EventEmitter();\n    this.changedCurrentPage = new EventEmitter();\n    this.tableColumns = signal([]);\n    this.tableColumnsWithSingleSelect = computed(() => {\n      const columns = this.tableColumns();\n      return ['__single-select__', ...columns];\n    });\n    effect(() => this.bindModelsToTable());\n    effect(() => this.propagateModelWhenSelectionChanged());\n  }\n  ngAfterViewInit() {\n    this.bindModelsToTable();\n  }\n  bindModelsToTable() {\n    const models = this.models();\n    if (!this.table) {\n      return;\n    }\n    const dataSource = new TableDatasource(models || []);\n    dataSource.sort = this.sort;\n    this.table.dataSource = dataSource;\n    // Clear Selection\n    this.selection.clear();\n    untracked(() => this.selected.emit(null));\n  }\n  propagateModelWhenSelectionChanged() {\n    const model = this.selectedModel();\n    untracked(() => this.selected.emit(model));\n  }\n};\n__decorate([Input({\n  required: true\n}), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], TableComponent.prototype, \"data\", null);\n__decorate([Input({\n  required: true\n}), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], TableComponent.prototype, \"columns\", null);\n__decorate([Output(), __metadata(\"design:type\", Object)], TableComponent.prototype, \"selected\", void 0);\n__decorate([Output(), __metadata(\"design:type\", Object)], TableComponent.prototype, \"changedCurrentPage\", void 0);\n__decorate([ViewChild(MatSort), __metadata(\"design:type\", typeof (_a = typeof MatSort !== \"undefined\" && MatSort) === \"function\" ? _a : Object)], TableComponent.prototype, \"sort\", void 0);\n__decorate([ViewChild(MatTable), __metadata(\"design:type\", typeof (_b = typeof MatTable !== \"undefined\" && MatTable) === \"function\" ? _b : Object)], TableComponent.prototype, \"table\", void 0);\nTableComponent = __decorate([Component({\n  selector: 'app-table',\n  standalone: true,\n  imports: [MatButtonModule, MatCheckboxModule, MatTableModule, MatPaginatorModule, MatSortModule, NgForOf, AsyncPipe, JsonPipe, TableColumnTitlePipe, MatIconModule, MatInputModule],\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}), __metadata(\"design:paramtypes\", [])], TableComponent);","map":{"version":3,"names":["AsyncPipe","JsonPipe","NgForOf","ChangeDetectionStrategy","Component","EventEmitter","Input","Output","ViewChild","computed","effect","signal","untracked","MatPaginatorModule","MatSort","MatSortModule","MatTable","MatTableModule","TableDatasource","SelectionModel","toSignal","MatButtonModule","MatCheckboxModule","MatIconModule","MatInputModule","TableColumnTitlePipe","TableComponent","data","models","set","columns","tableColumns","constructor","selection","selectionChange","changed","selectedModel","added","selected","changedCurrentPage","tableColumnsWithSingleSelect","bindModelsToTable","propagateModelWhenSelectionChanged","ngAfterViewInit","table","dataSource","sort","clear","emit","model","__decorate","required","_a","Object","_b","selector","standalone","imports","templateUrl","styleUrls","changeDetection","OnPush"],"sources":["C:\\Users\\gregor.woiwode\\workbench\\talks\\talk-qwik-angular\\apps\\insurance-angular\\src\\app\\components\\table\\table.component.ts"],"sourcesContent":["import { AsyncPipe, JsonPipe, NgForOf } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  computed,\n  effect,\n  signal,\n  untracked,\n} from '@angular/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatTable, MatTableModule } from '@angular/material/table';\nimport { TableDatasource } from './table.datasource';\n\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { KeyOf } from './key-of.type';\nimport { TableColumnTitlePipe } from './table-column-titlte.pipe';\n\n@Component({\n  selector: 'app-table',\n  standalone: true,\n  imports: [\n    MatButtonModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    NgForOf,\n    AsyncPipe,\n    JsonPipe,\n    TableColumnTitlePipe,\n    MatIconModule,\n    MatInputModule,\n  ],\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableComponent<TModel> implements AfterViewInit {\n  private readonly models = signal<TModel[]>([]);\n\n  protected readonly selection = new SelectionModel<TModel>(false);\n  protected readonly selectionChange = toSignal(this.selection.changed);\n  protected readonly selectedModel = computed(() => {\n    const selection = this.selectionChange()?.added[0];\n    return selection ? selection : null;\n  });\n\n  @Input({ required: true }) set data(data: TModel[] | null) {\n    this.models.set(data || []);\n  }\n\n  @Input({ required: true }) set columns(columns: KeyOf<TModel>[]) {\n    this.tableColumns.set(columns || []);\n  }\n\n  @Output() selected = new EventEmitter<TModel | null>();\n  @Output() changedCurrentPage = new EventEmitter<number>();\n\n  @ViewChild(MatSort) protected sort!: MatSort;\n  @ViewChild(MatTable) protected table!: MatTable<TModel>;\n\n  protected tableColumns = signal<KeyOf<TModel>[]>([]);\n  protected tableColumnsWithSingleSelect = computed(() => {\n    const columns = this.tableColumns();\n\n    return ['__single-select__', ...columns];\n  });\n\n  constructor() {\n    effect(() => this.bindModelsToTable());\n    effect(() => this.propagateModelWhenSelectionChanged());\n  }\n\n  ngAfterViewInit() {\n    this.bindModelsToTable();\n  }\n\n  private bindModelsToTable() {\n    const models = this.models();\n\n    if (!this.table) {\n      return;\n    }\n\n    const dataSource = new TableDatasource(models || []);\n    dataSource.sort = this.sort;\n    this.table.dataSource = dataSource;\n\n    // Clear Selection\n    this.selection.clear();\n\n    untracked(() => this.selected.emit(null));\n  }\n\n  private propagateModelWhenSelectionChanged() {\n    const model = this.selectedModel();\n\n    untracked(() => this.selected.emit(model));\n  }\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,iBAAiB;AAC9D,SAEEC,uBAAuB,EACvBC,SAAS,EACTC,YAAY,EACZC,KAAK,EACLC,MAAM,EACNC,SAAS,EACTC,QAAQ,EACRC,MAAM,EACNC,MAAM,EACNC,SAAS,QACJ,eAAe;AACtB,SAASC,kBAAkB,QAAQ,6BAA6B;AAChE,SAASC,OAAO,EAAEC,aAAa,QAAQ,wBAAwB;AAC/D,SAASC,QAAQ,EAAEC,cAAc,QAAQ,yBAAyB;AAClE,SAASC,eAAe,QAAQ,oBAAoB;AAEpD,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,cAAc,QAAQ,yBAAyB;AAExD,SAASC,oBAAoB,QAAQ,4BAA4B;AAsB1D,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAUzB,IAA+BC,IAAIA,CAACA,IAAqB;IACvD,IAAI,CAACC,MAAM,CAACC,GAAG,CAACF,IAAI,IAAI,EAAE,CAAC;EAC7B;EAEA,IAA+BG,OAAOA,CAACA,OAAwB;IAC7D,IAAI,CAACC,YAAY,CAACF,GAAG,CAACC,OAAO,IAAI,EAAE,CAAC;EACtC;EAeAE,YAAA;IA9BiB,KAAAJ,MAAM,GAAGjB,MAAM,CAAW,EAAE,CAAC;IAE3B,KAAAsB,SAAS,GAAG,IAAId,cAAc,CAAS,KAAK,CAAC;IAC7C,KAAAe,eAAe,GAAGd,QAAQ,CAAC,IAAI,CAACa,SAAS,CAACE,OAAO,CAAC;IAClD,KAAAC,aAAa,GAAG3B,QAAQ,CAAC,MAAK;MAC/C,MAAMwB,SAAS,GAAG,IAAI,CAACC,eAAe,EAAE,EAAEG,KAAK,CAAC,CAAC,CAAC;MAClD,OAAOJ,SAAS,GAAGA,SAAS,GAAG,IAAI;IACrC,CAAC,CAAC;IAUQ,KAAAK,QAAQ,GAAG,IAAIjC,YAAY,EAAiB;IAC5C,KAAAkC,kBAAkB,GAAG,IAAIlC,YAAY,EAAU;IAK/C,KAAA0B,YAAY,GAAGpB,MAAM,CAAkB,EAAE,CAAC;IAC1C,KAAA6B,4BAA4B,GAAG/B,QAAQ,CAAC,MAAK;MACrD,MAAMqB,OAAO,GAAG,IAAI,CAACC,YAAY,EAAE;MAEnC,OAAO,CAAC,mBAAmB,EAAE,GAAGD,OAAO,CAAC;IAC1C,CAAC,CAAC;IAGApB,MAAM,CAAC,MAAM,IAAI,CAAC+B,iBAAiB,EAAE,CAAC;IACtC/B,MAAM,CAAC,MAAM,IAAI,CAACgC,kCAAkC,EAAE,CAAC;EACzD;EAEAC,eAAeA,CAAA;IACb,IAAI,CAACF,iBAAiB,EAAE;EAC1B;EAEQA,iBAAiBA,CAAA;IACvB,MAAMb,MAAM,GAAG,IAAI,CAACA,MAAM,EAAE;IAE5B,IAAI,CAAC,IAAI,CAACgB,KAAK,EAAE;MACf;;IAGF,MAAMC,UAAU,GAAG,IAAI3B,eAAe,CAACU,MAAM,IAAI,EAAE,CAAC;IACpDiB,UAAU,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI;IAC3B,IAAI,CAACF,KAAK,CAACC,UAAU,GAAGA,UAAU;IAElC;IACA,IAAI,CAACZ,SAAS,CAACc,KAAK,EAAE;IAEtBnC,SAAS,CAAC,MAAM,IAAI,CAAC0B,QAAQ,CAACU,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3C;EAEQN,kCAAkCA,CAAA;IACxC,MAAMO,KAAK,GAAG,IAAI,CAACb,aAAa,EAAE;IAElCxB,SAAS,CAAC,MAAM,IAAI,CAAC0B,QAAQ,CAACU,IAAI,CAACC,KAAK,CAAC,CAAC;EAC5C;CACD;AApDCC,UAAA,EAAC5C,KAAK,CAAC;EAAE6C,QAAQ,EAAE;AAAI,CAAE,CAAC,E,sHAEzB;AAEDD,UAAA,EAAC5C,KAAK,CAAC;EAAE6C,QAAQ,EAAE;AAAI,CAAE,CAAC,E,uHAEzB;AAESD,UAAA,EAAT3C,MAAM,EAAE,E,iFAA8C;AAC7C2C,UAAA,EAAT3C,MAAM,EAAE,E,2FAAiD;AAE5B2C,UAAA,EAA7B1C,SAAS,CAACM,OAAO,CAAC,E,8CAAkBA,OAAO,oBAAPA,OAAO,mBAAAsC,EAAA,GAAAC,MAAA,E,2CAAC;AACdH,UAAA,EAA9B1C,SAAS,CAACQ,QAAQ,CAAC,E,8CAAmBA,QAAQ,oBAARA,QAAQ,mBAAAsC,EAAA,GAAAD,MAAA,E,4CAAS;AAtB7C3B,cAAc,GAAAwB,UAAA,EApB1B9C,SAAS,CAAC;EACTmD,QAAQ,EAAE,WAAW;EACrBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CACPpC,eAAe,EACfC,iBAAiB,EACjBL,cAAc,EACdJ,kBAAkB,EAClBE,aAAa,EACbb,OAAO,EACPF,SAAS,EACTC,QAAQ,EACRwB,oBAAoB,EACpBF,aAAa,EACbC,cAAc,CACf;EACDkC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB,CAAC;EACrCC,eAAe,EAAEzD,uBAAuB,CAAC0D;CAC1C,CAAC,E,sCACWnC,cAAc,CA8D1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}