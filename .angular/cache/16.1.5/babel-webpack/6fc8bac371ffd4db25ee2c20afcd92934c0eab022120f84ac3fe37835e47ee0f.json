{"ast":null,"code":"import { Subscribable } from './subscribable.mjs';\nimport { isServer } from './utils.mjs';\nconst onlineEvents = ['online', 'offline'];\nclass OnlineManager extends Subscribable {\n  constructor() {\n    super();\n    this.setup = onOnline => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onOnline(); // Listen to online\n\n        onlineEvents.forEach(event => {\n          window.addEventListener(event, listener, false);\n        });\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          onlineEvents.forEach(event => {\n            window.removeEventListener(event, listener);\n          });\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n  setEventListener(setup) {\n    var _this$cleanup2;\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(online => {\n      if (typeof online === 'boolean') {\n        this.setOnline(online);\n      } else {\n        this.onOnline();\n      }\n    });\n  }\n  setOnline(online) {\n    const changed = this.online !== online;\n    if (changed) {\n      this.online = online;\n      this.onOnline();\n    }\n  }\n  onOnline() {\n    this.listeners.forEach(({\n      listener\n    }) => {\n      listener();\n    });\n  }\n  isOnline() {\n    if (typeof this.online === 'boolean') {\n      return this.online;\n    }\n    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {\n      return true;\n    }\n    return navigator.onLine;\n  }\n}\nconst onlineManager = new OnlineManager();\nexport { OnlineManager, onlineManager };","map":{"version":3,"names":["Subscribable","isServer","onlineEvents","OnlineManager","constructor","setup","onOnline","window","addEventListener","listener","forEach","event","removeEventListener","onSubscribe","cleanup","setEventListener","onUnsubscribe","hasListeners","_this$cleanup","call","undefined","_this$cleanup2","online","setOnline","changed","listeners","isOnline","navigator","onLine","onlineManager"],"sources":["C:/Users/gregor.woiwode/workbench/talks/talk-qwik-angular/node_modules/.pnpm/@tanstack+query-core@4.32.0/node_modules/@tanstack/query-core/build/lib/onlineManager.mjs"],"sourcesContent":["import { Subscribable } from './subscribable.mjs';\nimport { isServer } from './utils.mjs';\n\nconst onlineEvents = ['online', 'offline'];\nclass OnlineManager extends Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onOnline => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onOnline(); // Listen to online\n\n\n        onlineEvents.forEach(event => {\n          window.addEventListener(event, listener, false);\n        });\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          onlineEvents.forEach(event => {\n            window.removeEventListener(event, listener);\n          });\n        };\n      }\n\n      return;\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(online => {\n      if (typeof online === 'boolean') {\n        this.setOnline(online);\n      } else {\n        this.onOnline();\n      }\n    });\n  }\n\n  setOnline(online) {\n    const changed = this.online !== online;\n\n    if (changed) {\n      this.online = online;\n      this.onOnline();\n    }\n  }\n\n  onOnline() {\n    this.listeners.forEach(({\n      listener\n    }) => {\n      listener();\n    });\n  }\n\n  isOnline() {\n    if (typeof this.online === 'boolean') {\n      return this.online;\n    }\n\n    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {\n      return true;\n    }\n\n    return navigator.onLine;\n  }\n\n}\nconst onlineManager = new OnlineManager();\n\nexport { OnlineManager, onlineManager };\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,oBAAoB;AACjD,SAASC,QAAQ,QAAQ,aAAa;AAEtC,MAAMC,YAAY,GAAG,CAAC,QAAQ,EAAE,SAAS,CAAC;AAC1C,MAAMC,aAAa,SAASH,YAAY,CAAC;EACvCI,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,KAAK,GAAGC,QAAQ,IAAI;MACvB;MACA;MACA,IAAI,CAACL,QAAQ,IAAIM,MAAM,CAACC,gBAAgB,EAAE;QACxC,MAAMC,QAAQ,GAAGA,CAAA,KAAMH,QAAQ,CAAC,CAAC,CAAC,CAAC;;QAGnCJ,YAAY,CAACQ,OAAO,CAACC,KAAK,IAAI;UAC5BJ,MAAM,CAACC,gBAAgB,CAACG,KAAK,EAAEF,QAAQ,EAAE,KAAK,CAAC;QACjD,CAAC,CAAC;QACF,OAAO,MAAM;UACX;UACAP,YAAY,CAACQ,OAAO,CAACC,KAAK,IAAI;YAC5BJ,MAAM,CAACK,mBAAmB,CAACD,KAAK,EAAEF,QAAQ,CAAC;UAC7C,CAAC,CAAC;QACJ,CAAC;MACH;MAEA;IACF,CAAC;EACH;EAEAI,WAAWA,CAAA,EAAG;IACZ,IAAI,CAAC,IAAI,CAACC,OAAO,EAAE;MACjB,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACV,KAAK,CAAC;IACnC;EACF;EAEAW,aAAaA,CAAA,EAAG;IACd,IAAI,CAAC,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;MACxB,IAAIC,aAAa;MAEjB,CAACA,aAAa,GAAG,IAAI,CAACJ,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGI,aAAa,CAACC,IAAI,CAAC,IAAI,CAAC;MAC1E,IAAI,CAACL,OAAO,GAAGM,SAAS;IAC1B;EACF;EAEAL,gBAAgBA,CAACV,KAAK,EAAE;IACtB,IAAIgB,cAAc;IAElB,IAAI,CAAChB,KAAK,GAAGA,KAAK;IAClB,CAACgB,cAAc,GAAG,IAAI,CAACP,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGO,cAAc,CAACF,IAAI,CAAC,IAAI,CAAC;IAC5E,IAAI,CAACL,OAAO,GAAGT,KAAK,CAACiB,MAAM,IAAI;MAC7B,IAAI,OAAOA,MAAM,KAAK,SAAS,EAAE;QAC/B,IAAI,CAACC,SAAS,CAACD,MAAM,CAAC;MACxB,CAAC,MAAM;QACL,IAAI,CAAChB,QAAQ,CAAC,CAAC;MACjB;IACF,CAAC,CAAC;EACJ;EAEAiB,SAASA,CAACD,MAAM,EAAE;IAChB,MAAME,OAAO,GAAG,IAAI,CAACF,MAAM,KAAKA,MAAM;IAEtC,IAAIE,OAAO,EAAE;MACX,IAAI,CAACF,MAAM,GAAGA,MAAM;MACpB,IAAI,CAAChB,QAAQ,CAAC,CAAC;IACjB;EACF;EAEAA,QAAQA,CAAA,EAAG;IACT,IAAI,CAACmB,SAAS,CAACf,OAAO,CAAC,CAAC;MACtBD;IACF,CAAC,KAAK;MACJA,QAAQ,CAAC,CAAC;IACZ,CAAC,CAAC;EACJ;EAEAiB,QAAQA,CAAA,EAAG;IACT,IAAI,OAAO,IAAI,CAACJ,MAAM,KAAK,SAAS,EAAE;MACpC,OAAO,IAAI,CAACA,MAAM;IACpB;IAEA,IAAI,OAAOK,SAAS,KAAK,WAAW,IAAI,OAAOA,SAAS,CAACC,MAAM,KAAK,WAAW,EAAE;MAC/E,OAAO,IAAI;IACb;IAEA,OAAOD,SAAS,CAACC,MAAM;EACzB;AAEF;AACA,MAAMC,aAAa,GAAG,IAAI1B,aAAa,CAAC,CAAC;AAEzC,SAASA,aAAa,EAAE0B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}