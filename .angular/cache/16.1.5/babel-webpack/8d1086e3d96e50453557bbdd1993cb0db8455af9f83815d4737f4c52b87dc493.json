{"ast":null,"code":"var _a;\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component, effect, EventEmitter, Input, Output } from '@angular/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { NgForOf, NgIf } from '@angular/common';\nimport { NonNullableFormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { debounceTime, map } from 'rxjs';\nexport let DokumentNewForm = class DokumentNewForm {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.form = this.setupForm();\n    this.formValues = toSignal(this.form.valueChanges.pipe(debounceTime(200), map(() => this.form.getRawValue())));\n    this.changed = new EventEmitter();\n    effect(() => this.emitAngebotDtoWhenFormChanged());\n  }\n  toggleDisabled({\n    formControlName,\n    $event\n  }) {\n    const control = this.form.get(formControlName);\n    if (!control) {\n      throw new Error(`Expected form to contain control \"${formControlName}\", but none was found.`);\n    }\n    $event.checked ? control.enable() : control.disable();\n  }\n  setupForm() {\n    return this.formBuilder.group({\n      berechnungsart: ['', [Validators.required]],\n      risiko: ['', [Validators.required]],\n      zusatzschutzAufschlag: [{\n        value: '',\n        disabled: true\n      }, [Validators.required]],\n      hatWebshop: false,\n      willZusatzschutz: false,\n      versicherungssumme: 0\n    });\n  }\n  emitAngebotDtoWhenFormChanged() {\n    const dto = this.formValues();\n    if (this.form.invalid) {\n      this.changed.emit(null);\n    }\n    this.changed.emit(dto);\n  }\n};\n__decorate([Input({\n  required: true\n}), __metadata(\"design:type\", Object)], DokumentNewForm.prototype, \"voreinstellungen\", void 0);\n__decorate([Output(), __metadata(\"design:type\", Object)], DokumentNewForm.prototype, \"changed\", void 0);\nDokumentNewForm = __decorate([Component({\n  selector: 'app-dokument-new-form',\n  standalone: true,\n  imports: [NgForOf, NgIf, ReactiveFormsModule, MatCheckboxModule, MatFormFieldModule, MatInputModule, MatOptionModule, MatSelectModule],\n  templateUrl: './dokument-new.form.html'\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof NonNullableFormBuilder !== \"undefined\" && NonNullableFormBuilder) === \"function\" ? _a : Object])], DokumentNewForm);","map":{"version":3,"names":["Component","effect","EventEmitter","Input","Output","MatCheckboxModule","MatFormFieldModule","MatInputModule","MatOptionModule","MatSelectModule","NgForOf","NgIf","NonNullableFormBuilder","ReactiveFormsModule","Validators","toSignal","debounceTime","map","DokumentNewForm","constructor","formBuilder","form","setupForm","formValues","valueChanges","pipe","getRawValue","changed","emitAngebotDtoWhenFormChanged","toggleDisabled","formControlName","$event","control","get","Error","checked","enable","disable","group","berechnungsart","required","risiko","zusatzschutzAufschlag","value","disabled","hatWebshop","willZusatzschutz","versicherungssumme","dto","invalid","emit","__decorate","selector","standalone","imports","templateUrl","_a","Object"],"sources":["C:\\Users\\gregor.woiwode\\workbench\\talks\\talk-qwik-angular\\apps\\insurance-angular\\src\\app\\features\\dokumente\\dokument-new\\dokument-new.form.ts"],"sourcesContent":["import { Component, effect, EventEmitter, Input, Output } from '@angular/core';\nimport { MatCheckboxChange, MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { NgForOf, NgIf } from '@angular/common';\nimport { NonNullableFormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { ErzeugeNeuesAngebotDto, VoreinstellungenReadDto } from '../models';\nimport { debounceTime, map } from 'rxjs';\n\n@Component({\n  selector: 'app-dokument-new-form',\n  standalone: true,\n  imports: [\n    NgForOf,\n    NgIf,\n    ReactiveFormsModule,\n\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatOptionModule,\n    MatSelectModule\n  ],\n  templateUrl: './dokument-new.form.html'\n})\nexport class DokumentNewForm {\n  protected readonly form = this.setupForm();\n\n  private readonly formValues = toSignal(\n    this.form.valueChanges.pipe(\n      debounceTime(200),\n      map(() => this.form.getRawValue())\n    )\n  );\n\n  @Input({ required: true }) voreinstellungen: VoreinstellungenReadDto | undefined;\n  @Output() changed = new EventEmitter<ErzeugeNeuesAngebotDto|null>();\n\n  constructor(private readonly formBuilder: NonNullableFormBuilder) {\n    effect(() => this.emitAngebotDtoWhenFormChanged());\n  }\n\n  protected toggleDisabled({\n    formControlName,\n    $event\n  }: {\n    formControlName: string;\n    $event: MatCheckboxChange;\n  }) {\n    const control = this.form.get(formControlName);\n\n    if (!control) {\n      throw new Error(`Expected form to contain control \"${formControlName}\", but none was found.`);\n    }\n\n    $event.checked ? control.enable() : control.disable();\n  }\n\n  private setupForm() {\n    return this.formBuilder.group({\n      berechnungsart: ['', [Validators.required]],\n      risiko: ['', [Validators.required]],\n      zusatzschutzAufschlag: [{ value: '', disabled: true }, [Validators.required]],\n      hatWebshop: false,\n      willZusatzschutz: false,\n      versicherungssumme: 0,\n    });\n  }\n\n  private emitAngebotDtoWhenFormChanged() {\n    const dto = this.formValues();\n\n    if (this.form.invalid) {\n      this.changed.emit(null);\n\n    }\n\n    this.changed.emit(dto);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}