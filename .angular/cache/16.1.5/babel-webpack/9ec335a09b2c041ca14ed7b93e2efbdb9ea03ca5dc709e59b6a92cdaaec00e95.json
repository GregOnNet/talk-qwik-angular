{"ast":null,"code":"import { QueryObserver } from './queryObserver.mjs';\nimport { infiniteQueryBehavior, hasNextPage, hasPreviousPage } from './infiniteQueryBehavior.mjs';\nclass InfiniteQueryObserver extends QueryObserver {\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(client, options) {\n    super(client, options);\n  }\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n  setOptions(options, notifyOptions) {\n    super.setOptions({\n      ...options,\n      behavior: infiniteQueryBehavior()\n    }, notifyOptions);\n  }\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n  fetchNextPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam\n        }\n      }\n    });\n  }\n  fetchPreviousPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam\n        }\n      }\n    });\n  }\n  createResult(query, options) {\n    var _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet, _state$data, _state$data2;\n    const {\n      state\n    } = query;\n    const result = super.createResult(query, options);\n    const {\n      isFetching,\n      isRefetching\n    } = result;\n    const isFetchingNextPage = isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward';\n    const isFetchingPreviousPage = isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward';\n    return {\n      ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    };\n  }\n}\nexport { InfiniteQueryObserver };","map":{"version":3,"names":["QueryObserver","infiniteQueryBehavior","hasNextPage","hasPreviousPage","InfiniteQueryObserver","constructor","client","options","bindMethods","fetchNextPage","bind","fetchPreviousPage","setOptions","notifyOptions","behavior","getOptimisticResult","pageParam","fetch","meta","fetchMore","direction","createResult","query","_state$fetchMeta","_state$fetchMeta$fetc","_state$fetchMeta2","_state$fetchMeta2$fet","_state$data","_state$data2","state","result","isFetching","isRefetching","isFetchingNextPage","fetchMeta","isFetchingPreviousPage","data","pages"],"sources":["C:/Users/gregor.woiwode/workbench/talks/talk-qwik-angular/node_modules/.pnpm/@tanstack+query-core@4.32.0/node_modules/@tanstack/query-core/build/lib/infiniteQueryObserver.mjs"],"sourcesContent":["import { QueryObserver } from './queryObserver.mjs';\nimport { infiniteQueryBehavior, hasNextPage, hasPreviousPage } from './infiniteQueryBehavior.mjs';\n\nclass InfiniteQueryObserver extends QueryObserver {\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(client, options) {\n    super(client, options);\n  }\n\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    super.setOptions({ ...options,\n      behavior: infiniteQueryBehavior()\n    }, notifyOptions);\n  }\n\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n\n  fetchNextPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  fetchPreviousPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  createResult(query, options) {\n    var _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet, _state$data, _state$data2;\n\n    const {\n      state\n    } = query;\n    const result = super.createResult(query, options);\n    const {\n      isFetching,\n      isRefetching\n    } = result;\n    const isFetchingNextPage = isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward';\n    const isFetchingPreviousPage = isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward';\n    return { ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    };\n  }\n\n}\n\nexport { InfiniteQueryObserver };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}