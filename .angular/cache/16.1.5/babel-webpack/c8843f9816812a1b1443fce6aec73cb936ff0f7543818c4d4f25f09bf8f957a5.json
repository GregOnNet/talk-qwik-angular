{"ast":null,"code":"import { importProvidersFrom, LOCALE_ID } from '@angular/core';\nimport { provideRouter, withEnabledBlockingInitialNavigation } from '@angular/router';\nimport { appRoutes } from './app.routes';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { HTTP_INTERCEPTORS, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { ENVIRONMENT_CONFIGURATION_TOKEN } from './environment/environment-configuration.token';\nimport { environment } from '../environments/environment';\nimport { ApiErrorInterceptor } from './infrastructure/interceptors';\nimport { provideNgNeatQueryClient } from './infrastructure/ngneat';\nimport '@angular/common/locales/global/de';\nexport const appConfig = {\n  providers: [provideAnimations(), provideHttpClient(withInterceptorsFromDi()), provideRouter(appRoutes, withEnabledBlockingInitialNavigation()), importProvidersFrom(MatSnackBarModule), {\n    provide: LOCALE_ID,\n    useValue: 'de-DE'\n  }, {\n    provide: ENVIRONMENT_CONFIGURATION_TOKEN,\n    useValue: environment\n  }, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ApiErrorInterceptor,\n    multi: true\n  }, provideNgNeatQueryClient()]\n};","map":{"version":3,"names":["importProvidersFrom","LOCALE_ID","provideRouter","withEnabledBlockingInitialNavigation","appRoutes","provideAnimations","HTTP_INTERCEPTORS","provideHttpClient","withInterceptorsFromDi","MatSnackBarModule","ENVIRONMENT_CONFIGURATION_TOKEN","environment","ApiErrorInterceptor","provideNgNeatQueryClient","appConfig","providers","provide","useValue","useClass","multi"],"sources":["C:\\Users\\gregor.woiwode\\workbench\\talks\\talk-qwik-angular\\apps\\insurance-angular\\src\\app\\app.config.ts"],"sourcesContent":["import {\n  ApplicationConfig,\n  importProvidersFrom,\n  LOCALE_ID,\n} from '@angular/core';\nimport {\n  provideRouter,\n  withEnabledBlockingInitialNavigation,\n} from '@angular/router';\nimport { appRoutes } from './app.routes';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport {\n  HTTP_INTERCEPTORS,\n  provideHttpClient,\n  withInterceptorsFromDi,\n} from '@angular/common/http';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { ENVIRONMENT_CONFIGURATION_TOKEN } from './environment/environment-configuration.token';\nimport { environment } from '../environments/environment';\nimport { ApiErrorInterceptor } from './infrastructure/interceptors';\nimport { provideNgNeatQueryClient } from './infrastructure/ngneat';\n\nimport '@angular/common/locales/global/de';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideAnimations(),\n    provideHttpClient(withInterceptorsFromDi()),\n    provideRouter(appRoutes, withEnabledBlockingInitialNavigation()),\n\n    importProvidersFrom(MatSnackBarModule),\n\n    { provide: LOCALE_ID, useValue: 'de-DE' },\n    { provide: ENVIRONMENT_CONFIGURATION_TOKEN, useValue: environment },\n    { provide: HTTP_INTERCEPTORS, useClass: ApiErrorInterceptor, multi: true },\n\n    provideNgNeatQueryClient(),\n  ],\n};\n"],"mappings":"AAAA,SAEEA,mBAAmB,EACnBC,SAAS,QACJ,eAAe;AACtB,SACEC,aAAa,EACbC,oCAAoC,QAC/B,iBAAiB;AACxB,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,SACEC,iBAAiB,EACjBC,iBAAiB,EACjBC,sBAAsB,QACjB,sBAAsB;AAC7B,SAASC,iBAAiB,QAAQ,6BAA6B;AAC/D,SAASC,+BAA+B,QAAQ,+CAA+C;AAC/F,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,mBAAmB,QAAQ,+BAA+B;AACnE,SAASC,wBAAwB,QAAQ,yBAAyB;AAElE,OAAO,mCAAmC;AAE1C,OAAO,MAAMC,SAAS,GAAsB;EAC1CC,SAAS,EAAE,CACTV,iBAAiB,EAAE,EACnBE,iBAAiB,CAACC,sBAAsB,EAAE,CAAC,EAC3CN,aAAa,CAACE,SAAS,EAAED,oCAAoC,EAAE,CAAC,EAEhEH,mBAAmB,CAACS,iBAAiB,CAAC,EAEtC;IAAEO,OAAO,EAAEf,SAAS;IAAEgB,QAAQ,EAAE;EAAO,CAAE,EACzC;IAAED,OAAO,EAAEN,+BAA+B;IAAEO,QAAQ,EAAEN;EAAW,CAAE,EACnE;IAAEK,OAAO,EAAEV,iBAAiB;IAAEY,QAAQ,EAAEN,mBAAmB;IAAEO,KAAK,EAAE;EAAI,CAAE,EAE1EN,wBAAwB,EAAE;CAE7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}